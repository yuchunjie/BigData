input {
  file {
    type => "spam_mail"
    path => [
			"/home/hadoop/logstash-1.4.2/_sample_log/spam_mail_log/2010/*.lorien",
			"/home/hadoop/logstash-1.4.2/_sample_log/spam_mail_log/2011/*.lorien",
			"/home/hadoop/logstash-1.4.2/_sample_log/spam_mail_log/2012/*.lorien",
			"/home/hadoop/logstash-1.4.2/_sample_log/spam_mail_log/2013/*.lorien",
			"/home/hadoop/logstash-1.4.2/_sample_log/spam_mail_log/2014/*.lorien",
			"/home/hadoop/logstash-1.4.2/_sample_log/spam_mail_log/2015/*.lorien",
	        "/home/hadoop/logstash-1.4.2/_sample_log/spam_mail_log/*.lorien"]
    start_position => beginning 
    sincedb_path => "/home/hadoop/logstash-1.4.2/_sample_log/spam_mail_log/sincedb.db"
  }
}
filter {
   # Filtering empty or space line
   if[message] =~ /^\s*$/ {
     drop { }
   }
   if[message] == "<br>" {
    drop { }
   }
   mutate {
    # Mutate replace example
    #gsub => ["message", "Delivered-To:", "CJYu"]
   }
   multiline {
		#type => "spam_mail"
		negate => "true"
		what => "previous" 
		pattern => "Received:" 
	}
  grok {
	 #To Fetch Source IP from extract lines
     match => ["message", "%{IP:source_IP}"]
  }
} 
output{
 stdout {
 # Output to stdout as screen
 codec => rubydebug
 }
 elasticsearch {
 # Output parsed data to elasticsearch
 host => "hadoop01"
 port => 9200
 index => "sample"
 index_type => "sample_event"
 cluster => "sample"
 protocol => "http"
 workers => 1
 }
}
