input 
{ 
	file 
	{
		#logstash.bat agent -f conf/sample6.conf
		path => "D:/yang/Big Data/week4_ElasticSearch LogStash/logstash-1.4.2/logstash-1.4.2/bin/logstash_log/2011/test/*.lorien" 
		start_position => beginning
		sincedb_path => "D:/yang/Big Data/week4_ElasticSearch LogStash/logstash-1.5.0.beta1/logstash-1.5.0.beta1/bin/output/access_log_postision1.db" 
		
		codec => multiline 
		{
		  pattern => "Delivered-To:"
		  negate => true
		  what => previous
		}
	
	} 
} 


filter
{	
	if "Delivered-To" in [message]
	{
		grok 
		{	
			match => ["message","Delivered-To:\s(%{DATA:Delivered})\n"]
		}
		grok 
		{
			match => ["message","Date:\s(%{DATA:Date})[+|-][\d]{4}\n"]
		}		
		grok 
		{
			match => ["message","From:\s(%{DATA:From})\n"]
		}
		grok 
		{
			match => ["message","To:\s(%{DATA:To})\n"]
		}
		grok 
		{
			match => ["message","Subject:\s(%{DATA:Subject})\n"]
		}
		grok 
		{
			match => ["message","Reply-To:\s(%{DATA:Reply-To})\n"]
		}
		grok 
		{
			match => ["message","MIME-Version:\s(%{DATA:MIME-Version})\n"]
		}
		grok 
		{
			match => ["message","Message-ID:\s(%{DATA:Message-ID})\n"]
		}
		grok 
		{
			match => ["message","Content-Type:\s(%{DATA:Content-Type})\n"]
		}
		grok 
		{
			match => ["message","Content-Length:\s(%{DATA:Content-Length})\n"]
		}
		grok 
		{
			match => ["message","name=\"(%{DATA:File-Name})\""]
		}
		ruby 
		{
			code => 
			'
				event["Received"] = event["message"].scan(/Received:\s(.*?[+|-][\d]{4})\n/xmi).flatten	
			'
		}	
		ruby 
		{
			code => 
			'
				event["IP"] = event["message"].scan(/(?<![0-9])(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))(?![0-9])/xmi).flatten
			'
		}
    }
}

output
{
	stdout 
	{ 
		codec => rubydebug
	}
	
}
